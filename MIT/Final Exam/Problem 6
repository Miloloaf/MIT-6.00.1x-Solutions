def cipher(map_from, map_to, code):
    """ map_from, map_to: strings where each contain
                          N unique lowercase letters.
        code: string (assume it only contains letters also in map_from)
        Returns a tuple of (key_code, decoded).
        key_code is a dictionary with N keys mapping str to str where
        each key is a letter in map_from at index i and the corresponding
        value is the letter in map_to at index i.
        decoded is a string that contains the decoded version
        of code using the key_code mapping. """
    my_dict = {}
    decoded = ''

    for i in range(len(map_from)):
        if map_from[i] not in my_dict:
            my_dict[map_from[i]] = map_to[i]

    for j in code:
        decoded += my_dict[j]

    tupp = (my_dict, decoded)
    return tupp

# foo = "abcd"
# bar = "dcba"
# code = 'dab'
#
# print (cipher(foo,bar,code))

mydict = {}
# foo = "dab"
#
# print (foo[1])
